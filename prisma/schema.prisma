// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                Int          @id @default(autoincrement())
  name              String
  email             String       @unique
  googleId          String?      @unique
  avatarUrl         String?
  stories           Story[]
  sentRequests      Connection[] @relation("SentRequests")
  receivedRequests  Connection[] @relation("ReceivedRequests")
  tokens            Token[]
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model Story {
  id          Int      @id @default(autoincrement())
  content     String
  createdAt   DateTime @default(now())
  author      User     @relation(fields: [authorId], references: [id])
  authorId    Int
}

model Connection {
  id          Int      @id @default(autoincrement())
  sender      User     @relation("SentRequests", fields: [senderId], references: [id])
  senderId    Int
  receiver    User     @relation("ReceivedRequests", fields: [receiverId], references: [id])
  receiverId  Int
  status      String   @default("pending") // status can be "pending", "accepted", "rejected"
  createdAt   DateTime @default(now())
}

model Token {
  id          Int      @id @default(autoincrement())
  balance     Float    @default(0.0)
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
}
