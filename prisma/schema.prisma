datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String       @id @default(cuid()) // Unique identifier
  name             String
  email            String       @unique
  googleId         String       @unique
  avatarUrl        String?
  story            String? // Singular story or bio about the user
  sentRequests     Connection[] @relation("SentRequests")
  receivedRequests Connection[] @relation("ReceivedRequests")
  tokens           Float        @default(0.0) // Single token balance for the user
  gender           String?
  age              Int?
  race             String?
  location         String? // Location data
  preference       String? // User's preference
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  Story            Story[]
}

model Story {
  id        String   @id @default(cuid()) // Use cuid for unique identifier
  content   String // Content of the user's bio
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String // Foreign key linking to the User model
}

model Connection {
  id         String   @id @default(cuid()) // Use cuid for unique identifier
  sender     User     @relation("SentRequests", fields: [senderId], references: [id])
  senderId   String // Foreign key for the sender
  receiver   User     @relation("ReceivedRequests", fields: [receiverId], references: [id])
  receiverId String // Foreign key for the receiver
  status     String   @default("pending") // Status can be "pending", "accepted", "rejected"
  createdAt  DateTime @default(now())
}
