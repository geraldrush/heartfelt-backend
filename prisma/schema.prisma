datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String       @id @default(cuid()) // Use cuid for unique identifier
  name             String
  email            String       @unique
  googleId         String?      @unique
  avatarUrl        String?
  stories          Story[]
  sentRequests     Connection[] @relation("SentRequests")
  receivedRequests Connection[] @relation("ReceivedRequests")
  tokens           Token[]
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

model Story {
  id        String   @id @default(cuid()) // Use cuid for unique identifier
  content   String // Content of the user's bio
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String // Foreign key linking to the User model
}

model Connection {
  id         String   @id @default(cuid()) // Use cuid for unique identifier
  sender     User     @relation("SentRequests", fields: [senderId], references: [id])
  senderId   String // Foreign key for the sender
  receiver   User     @relation("ReceivedRequests", fields: [receiverId], references: [id])
  receiverId String // Foreign key for the receiver
  status     String   @default("pending") // Status can be "pending", "accepted", "rejected"
  createdAt  DateTime @default(now())
}

model Token {
  id        String   @id @default(cuid()) // Use cuid for unique identifier
  balance   Float    @default(0.0)
  user      User     @relation(fields: [userId], references: [id])
  userId    String // Foreign key for the user
  createdAt DateTime @default(now())
}
